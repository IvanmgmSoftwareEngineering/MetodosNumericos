%% polinomioLagrange

% TITULO: Funci?n Polinomio Lagrange
% AUTOR: IVAN MARTIN GOMEZ
%
% SINTAXIS: f(n,a,b)
% ARGUMENTOS ENTRADA:
%   ARGUMENTO 1: a --> Extremo Inferior del Intervalo Cerrado
%   ARGUMENTO 2: b --> Extremo Superior del Intervalo Cerrado
%   ARGUMENTO 3: n --> N?mero Puntos Discretos del Intervalo Cerrado
%
% SALIDA:        f --> Matriz con los valores del Polinomio de Lagrange
%                      particularizados en un punto del Intervalo Cerrado
%                      f(n,a,b) = [Lo(xo),Lo(x1),...,Lo(xo);L1(xo),L1(x1),...,L1(xn);...;Ln(xo),Ln(x1),...,Ln(xn)]
%
% ERRORES:
%   ERROR 1: Se comprueba que a < b, en caso contrario se devuelve
% 
% DESCRIPCI?N: Esta funci?n calcula cada uno de los Polinomios de Lagrange (habr? tantos como puntos discretos n) y 
%              los almacena en diferentes filas de un vector columna [Lo;L1;...;Ln], despu?s particulariza cada
%              uno de los polinomios obtenidos antes en cada uno de los n
%              puntos discretos, obteniendo as? una matriz.
%              
%               

function matriz_con_los_L_i = polinomioLagrange(opcion_tipo_intervalo,numPuntos,extremo_inf_interval,extremo_sup_interval)

if (extremo_inf_interval >= extremo_sup_interval)
    error ('El Extremo inferior del Intervalo debe ser mayor que el Extremo Superior del Intervalo')
end

if (numPuntos == 0)
    error ('El n?mero de puntos para calcular el Polinomio de Lagrange debe ser mayor que cero')
end

%Tomamos numPuntos Equiespaciados dentro del Intervalo Cerrado
%[extremo_inf_interval,extremo_sup_interval
if (opcion_tipo_intervalo == 1 )
       puntos= linspace(extremo_inf_interval,extremo_sup_interval,numPuntos);
end

%Para evitar hacerlo con Matlab Simb?lico, cada fila de la matriz L
%representa un Li(x), cada columna de cada una de las filas, representa el
%valor de Li(x) paraticularicado en cada uno de los puntos, es decir,
%Li(xj). Ejemplo para dos puntos: L=[Lo(xo),Lo(x1);L1(xo),L1(x1)]
L=zeros(numPuntos,numPuntos);

for i = 1:numPuntos+1
       for j = 1:numPuntos+1
           if ( i == j)
                L(i,j) = 1;
           else
               L(i,j) = 0;
           end
       end
end

matriz_con_los_L_i = L


end


   
     


